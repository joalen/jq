name: Klee Runner

on:
  push:

jobs:
  run-klee:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: 7be6870751c2ab3f49365a955c51ce5ba1f1b752

      - name: Install dependencies for project
        run: | 
          sudo apt-get update
          sudo apt-get install -y libtool make automake autoconf libtool
          
      - name: Build repository 
        run: | 
          git submodule update --init 
          autoreconf -i
          ./configure --with-oniguruma=builtin
          make -j8
      
      - name: Install Klee and STP dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake curl file g++-multilib gcc-multilib git libcap-dev libunwind-dev libgoogle-perftools-dev libncurses5-dev libsqlite3-dev libtcmalloc-minimal4 python3-pip unzip graphviz doxygen bison flex libboost-all-dev perl zlib1g-dev minisat
          sudo pip3 install lit wllvm
          sudo apt-get install -y clang-13 llvm-13 llvm-13-dev llvm-13-tools 
      - name: Install STP (a dependency to Klee)
        run: |
          git clone https://github.com/stp/stp.git /tmp/stp
          cd /tmp/stp && git checkout tags/2.3.3
          mkdir build && cd build
          cmake .. && make 
          sudo make install
          ulimit -s unlimited
      
      - name: Downloading Google Test Sources (a dependency to Klee)
        run: |
          mkdir -p /tmp/gtest && cd /tmp/gtest
          curl -OL https://github.com/google/googletest/archive/release-1.11.0.zip && unzip release-1.11.0.zip
      
      - name: Build uClibc and the POSIX environment model
        run: |
          git clone https://github.com/klee/klee-uclibc.git /tmp/klee-uclibc
          cd /tmp/klee-uclibc && ./configure --make-llvm-lib --with-cc clang-13 --with-llvm-config llvm-config-13
          make -j2 
          cd ..
      
      - name: Cloning and building libc++ (a dependency to Klee)
        run: | 
          git clone https://github.com/klee/klee.git /tmp/klee
          sudo LLVM_VERSION=13 BASE=/usr/lib ENABLE_OPTIMIZED=1 DISABLE_ASSERTIONS=1 ENABLE_DEBUG=0 REQUIRES_RTTI=1 /tmp/klee/scripts/build/build.sh libcxx
      
      - name: Configuring and Building Klee
        run: |
          cd /tmp/klee
          mkdir build && cd build 
          cmake -DENABLE_SOLVER_STP=ON -DENABLE_POSIX_RUNTIME=ON -DKLEE_UCLIBC_PATH=/tmp/klee-uclibc -DENABLE_UNIT_TESTS=ON -DGTEST_SRC_DIR=/tmp/gtest/googletest-release-1.11.0 ..
          make
      
      - name: Run Klee Analyzer
        run: |
          #!/bin/bash
          set +e 
          
          include_dirs=$(find . -name '*.h' -exec dirname {} + | sort -u | sed 's/^/-I /')
          
          failed_compilations=0
          failed_main_method=0
          successful=0
          unsuccessful=0
          
          while IFS= read -r -d '' file; do
              bc_file="${file%.c}.bc"
              if clang -I "$include_dirs" -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone "$file" -o "$bc_file" 2>/dev/null; then
                  if ! /usr/lib/llvm-14/bin/llvm-nm "$PWD/$bc_file" | grep -q " T main"; then
                      rm "$bc_file"
                      ((failed_main_method += 1))
                  else
                      klee_output=$(/tmp/klee/build/bin/klee "$bc_file" 2>&1)
                      klee_exit_code=$?
          
                      if [[ $klee_exit_code -eq 0 ]]; then
                          /tmp/klee/build/bin/klee "$bc_file"
                          echo ""
                          echo ""
                          echo ""
                          ((successful += 1))
                      elif [[ $klee_exit_code -eq 1 && $klee_output =~ "Invalid record" ]]; then
                          /tmp/klee/build/bin/klee "$bc_file"
                          ((unsuccessful += 1))
                      else
                          ((unsuccessful += 1))
                      fi
                  fi
              else
                  ((failed_compilations += 1))
              fi
          done < <(find . -name "*.c" -exec grep -q "int main" {} \; -print0)
          
          echo "Failed compilations: $failed_compilations"
          echo "Failed main method detections: $failed_main_method"
          echo "Successful runs with Klee: $successful"
          echo "Unsuccessful runs with 'Invalid record' error: $unsuccessful"
